#!/usr/bin/env node
"use strict";

const Assembler = require('./libs/assembler').Assembler;
const AsmListener = require('./libs/listeners').AsmListener;

var argv = require('minimist')(
  process.argv.slice(2),
  {
    'boolean': [ 'help' ],
    'strings': [ 'hex', 'text', 'symbol' ],
    'alias': {
      'help': [ 'h', '?' ],
    }
  }
)

argv.inputs = argv._;

if (argv.help || !argv.hex || !argv.inputs) {
  console.error('Usage: ' + process.argv[1] + ' --hex output.hex file1.asm [file2.asm ...]');
  console.error();
  console.error('  --help -h      Show this help dialog');
  console.error();
  console.error('  --hex          output hex file');
  console.error('  --text         output text file');
  console.error('  --symbol       output symbol table as asm file');
  process.exit(1);
}

console.log('Assembling ' + argv.inputs.join(', ') + ' into ' + argv.hex);

var asm = new Assembler(new AsmListener());

argv.inputs.forEach(function(file) { asm.readAsmFile(file); });
asm.writeHexFile(argv.hex);
if (argv.text) { asm.writeTextFile(argv.text); }
if (argv.symbol) { asm.writeSymbolFile(argv.symbol); }

// vim: ts=2 sw=2 et
